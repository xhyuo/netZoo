mean <- mean(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
setEdgeColorMapping('weight', c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,mean,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net)
createPANDAStyle(control_net)
createPANDAStyle <- function(panda.net){
colnames(panda.net) <- c("source","target","interaction","weight")
#sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
#panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
panda_sorted <- panda.net[order(panda.net$weight,decreasing = T),]
#create nodes arg for creating a cytoscape plot
#panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=nrow(panda.net)),stringsAsFactors=FALSE)
max <- max(panda.net$weight)
mean <- mean(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
setEdgeColorMapping('weight', c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,mean,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net)
createPANDAStyle <- function(panda.net){
colnames(panda.net) <- c("source","target","interaction","weight")
#sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
panda_sorted <- panda.net[order(panda.net$weight,decreasing = T),]
#create nodes arg for creating a cytoscape plot
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
#panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=nrow(panda.net)),stringsAsFactors=FALSE)
max <- max(panda.net$weight)
mean <- mean(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
setEdgeColorMapping('weight', c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,mean,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net)
createPANDAStyle <- function(panda.net,top=100){
colnames(panda.net) <- c("source","target","interaction","weight")
#sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
panda_sorted <- panda.net[order(panda.net$weight,decreasing = T),]
#create nodes arg for creating a cytoscape plot
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
#panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=nrow(panda.net)),stringsAsFactors=FALSE)
max <- max(panda.net$weight)
mean <- mean(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
setEdgeColorMapping('weight', c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,mean,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net)
createPANDAStyle <- function(panda.net){
colnames(panda.net) <- c("source","target","interaction","weight")
#sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
#panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
panda_sorted <- panda.net[order(panda.net$weight,decreasing = T),]
#create nodes arg for creating a cytoscape plot
#panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=nrow(panda.net)),stringsAsFactors=FALSE)
max <- max(panda.net$weight)
mean <- mean(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
setEdgeColorMapping('weight', c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,mean,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net)
createPANDAStyle(control_net[c(1:1000),])
createPANDAStyle <- function(panda.net){
colnames(panda.net) <- c("source","target","interaction","weight")
#sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
#panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
panda_sorted <- panda.net[order(panda.net$weight,decreasing = T),]
#create nodes arg for creating a cytoscape plot
#panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=nrow(panda.net)),stringsAsFactors=FALSE)
max <- max(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
setEdgeColorMapping('weight', c(min,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net[c(1:1000),])
runCytoscapePlot <- function(panda.net, top = 100, network.name="PANDA",style="PANDAStyle"){
# launch Cytoscape 3.6.1 or greater
cytoscapePing ()
cytoscapeVersionInfo ()
# change colnames of input PANDA network
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
#create nodes arg for creating a cytoscape plot
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title=network.name, collection="DataFrame Example")
setVisualStyle(style)
#deleteVisualStyle("PANDAStyle")
}
runCytoscapePlot(panda.net,top = 100)
runCytoscapePlot(control_net,top = 100)
createPANDAStyle <- function(panda.net){
colnames(panda.net) <- c("source","target","interaction","weight")
#sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
#panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
panda_sorted <- panda.net[order(panda.net$weight,decreasing = T),]
#create nodes arg for creating a cytoscape plot
#panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=nrow(panda.net)),stringsAsFactors=FALSE)
max <- max(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
setEdgeColorMapping('weight', c(min,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net[c(1:1000),])
View(control_net)
createPANDAStyle(control_net[c(1:100),])
control_net[c(1:100),]
createPANDAStyle <- function(panda.net){
colnames(panda.net) <- c("source","target","interaction","weight")
#sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
#panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
panda_sorted <- panda.net[order(panda.net$weight,decreasing = T),]
#create nodes arg for creating a cytoscape plot
#panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=nrow(panda.net)),stringsAsFactors=FALSE)
max <- max(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
setEdgeColorMapping('weight', c(min,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net[c(1:100),])
deleteVisualStyle("PANDAStyle")
createPANDAStyle <- function(panda.net){
colnames(panda.net) <- c("source","target","interaction","weight")
#sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
#panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
panda_sorted <- panda.net[order(panda.net$weight,decreasing = T),]
#create nodes arg for creating a cytoscape plot
#panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=nrow(panda.net)),stringsAsFactors=FALSE)
max <- max(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
setEdgeColorMapping('weight', c(min,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net)
createPANDAStyle <- function(panda.net){
colnames(panda.net) <- c("source","target","interaction","weight")
#sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
#panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], top)
panda_sorted <- panda.net[order(panda.net$weight,decreasing = T),]
#create nodes arg for creating a cytoscape plot
#panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=top),stringsAsFactors=FALSE)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=nrow(panda.net)),stringsAsFactors=FALSE)
max <- max(panda.net$weight)
min <- min(panda.net$weight)
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle("PANDAStyle", defaults)
# set node properties
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "PANDAStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "PANDAStyle")
setNodeLabelMapping("id", style.name = "PANDAStyle")
# set edge properties
lockNodeDimensions(F)
setEdgeColorMapping('weight', c(min,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "PANDAStyle")
setEdgeLineWidthMapping('weight',c(min,max), c(3,7,11),style.name = "PANDAStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "PANDAStyle")
setEdgeSourceArrowColorMapping('weight',c(min,mean,max), c('#dcdcdc', '#808080', '#000000'),style.name = "PANDAStyle")
}
createPANDAStyle(control_net)
runCytoscapePlot(control_net,top = 1000)
panda.net <- control_net
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], 1000)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=1000),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title="ppp", collection="DataFrame Example")
style.name = "pandaStyle"
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle(style.name,defaults)
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "pandaStyle")
setEdgeColorMapping('weight', c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "pandaStyle")
# setEdgeLineWidthDefault(3, style.name = "pandaStyle")
setNodeLabelMapping("id", style.name = "pandaStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "pandaStyle")
setEdgeSourceArrowColorMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setEdgeLineWidthMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c(3,7,11),style.name = "pandaStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setVisualStyle(style.name)
panda.net <- control_net
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], 1000)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=1000),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title="PANDA", collection="DataFrame Example")
style.name = "pandaStyle"
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle(style.name,defaults)
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "pandaStyle")
setEdgeColorMapping('weight', c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "pandaStyle")
# setEdgeLineWidthDefault(3, style.name = "pandaStyle")
setNodeLabelMapping("id", style.name = "pandaStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "pandaStyle")
setEdgeSourceArrowColorMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setEdgeLineWidthMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c(3,7,11),style.name = "pandaStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setVisualStyle(style.name)
deleteVisualStyle("PANDAStyle")
panda.net <- control_net
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], 1000)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=1000),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title="PANDA", collection="DataFrame Example")
style.name = "pandaStyle"
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle(style.name,defaults)
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "pandaStyle")
setEdgeColorMapping('weight', c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "pandaStyle")
# setEdgeLineWidthDefault(3, style.name = "pandaStyle")
setNodeLabelMapping("id", style.name = "pandaStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "pandaStyle")
setEdgeSourceArrowColorMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setEdgeLineWidthMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c(3,7,11),style.name = "pandaStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setVisualStyle(style.name)
deleteVisualStyle("PANDAStyle")
panda.net <- control_net
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], 1000)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=1000),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title="PANDA", collection="DataFrame Example")
style.name = "pandaStyle"
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle(style.name,defaults)
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "pandaStyle")
setEdgeColorMapping('weight', c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "pandaStyle")
# setEdgeLineWidthDefault(3, style.name = "pandaStyle")
setNodeLabelMapping("id", style.name = "pandaStyle")
setEdgeSourceArrowShapeDefault('ARROW',style.name = "pandaStyle")
setEdgeSourceArrowColorMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setEdgeLineWidthMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c(3,7,11),style.name = "pandaStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setVisualStyle(style.name)
deleteVisualStyle("PANDAStyle")
panda.net <- control_net
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], 1000)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=1000),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title="PANDA", collection="DataFrame Example")
style.name = "pandaStyle"
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle(style.name,defaults)
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "pandaStyle")
setEdgeColorMapping('weight', c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "pandaStyle")
# setEdgeLineWidthDefault(3, style.name = "pandaStyle")
setNodeLabelMapping("id", style.name = "pandaStyle")
setEdgeTargetArrowShapeDefault('ARROW',style.name = "pandaStyle")
setEdgeSourceArrowColorMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setEdgeLineWidthMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c(3,7,11),style.name = "pandaStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setVisualStyle(style.name)
panda.net <- control_net
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], 1000)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=1000),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title="PANDA", collection="DataFrame Example")
deleteVisualStyle("PANDAStyle")
panda.net <- control_net
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], 1000)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=1000),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title="PANDA", collection="DataFrame Example")
style.name = "pandaStyle"
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle(style.name,defaults)
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "pandaStyle")
setEdgeColorMapping('weight', c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "pandaStyle")
# setEdgeLineWidthDefault(3, style.name = "pandaStyle")
setNodeLabelMapping("id", style.name = "pandaStyle")
setEdgeTargetArrowShapeDefault('ARROW',style.name = "pandaStyle")
setEdgeTargetArrowColorMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setEdgeLineWidthMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c(3,7,11),style.name = "pandaStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setVisualStyle(style.name)
panda.net <- control_net
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], 1000)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=1000),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title="PANDA", collection="DataFrame Example")
style.name = "pandaStyle"
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle(style.name,defaults)
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "pandaStyle")
setEdgeColorMapping('weight', c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "pandaStyle")
# setEdgeLineWidthDefault(3, style.name = "pandaStyle")
setNodeLabelMapping("id", style.name = "pandaStyle")
setEdgeTargetArrowShapeDefault('ARROW',style.name = "pandaStyle")
setEdgeTargetArrowColorMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setEdgeLineWidthMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c(3,7,11),style.name = "pandaStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setVisualStyle(style.name)
panda.net <- control_net
colnames(panda.net) <- c("source","target","interaction","weight")
# sort PANDA netwoke and select top "top" edges.(default top 100 edges by weight)
panda_sorted <- head(panda.net[order(panda.net$weight,decreasing = T),], 1000)
panda_nodes <- data.frame(id=c(panda_sorted$source,panda_sorted$target), group=rep(c("TF","Gene"), each=1000),stringsAsFactors=FALSE)
# creat cytoscape from DataFrames
createNetworkFromDataFrames(nodes=panda_nodes,edges=panda_sorted, title="PANDA", collection="DataFrame Example")
style.name = "pandaStyle"
defaults <- list(NODE_SIZE=50,
EDGE_TRANSPARENCY=255,
NODE_LABEL_POSITION="center")
createVisualStyle(style.name,defaults)
setNodeShapeMapping('group',c("TF","Gene"),c("ELLIPSE","RECTANGLE"),style.name = "pandaStyle")
setEdgeColorMapping('weight', c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setNodeColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setEdgeLineStyleMapping('interaction',c("1","0"), c("SOLID","LONG_DASH"), style.name = "pandaStyle")
# setEdgeLineWidthDefault(3, style.name = "pandaStyle")
setNodeLabelMapping("id", style.name = "pandaStyle")
setEdgeTargetArrowShapeDefault('ARROW',style.name = "pandaStyle")
setEdgeTargetArrowColorMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c('#dcdcdc', '#808080', '#000000'),style.name = "pandaStyle")
setEdgeLineWidthMapping('weight',c(min(as.numeric(panda_sorted$weight)), mean(as.numeric(panda_sorted$weight)), max(as.numeric(panda_sorted$weight))), c(3,7,11),style.name = "pandaStyle")
setNodeBorderColorMapping('group', c("TF","Gene"), mapping.type = "d",c('#FD7622', '#499df3'),style.name = "pandaStyle")
setVisualStyle(style.name)
install.packages("tidyverse")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("AnnotationDbi", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Hs.eg.db", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnsDb.Hsapiens.v75", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DOSE", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pathview", version = "3.8")
library(clusterProfiler)
library(DOSE)
library(org.Hs.eg.db)
library(pathview)
library(tidyverse)
library(AnnotationDbi)
library(EnsDb.Hsapiens.v75)
